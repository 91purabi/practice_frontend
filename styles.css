/* CSS Selectors: Element(h1), Universal(*), Class(.), Id(#) */

h1 {
    color: blueviolet;
}

 * {        
   /*  color: blue;  "*" is a universal selector which select every element */
}

.error {
    color: red;
}

.success{
    color: green;
}

#test {
    color: maroon; /* "#" is use for select ID */
}

.orange {
    background-color: orange;
    text-align: center; 
    line-height: 2;
    letter-spacing: 4px;
    word-spacing: 20px;
}

.yellow {
    background-color: yellow;
}

.font-styles {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    font-style: italic;
    font-weight: bold;
    text-decoration: underline;
    font-size: 50px;
}

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

/* CSS Box Model: 
        In web design, every element is considered a rectangular box
        The CSS box model is sort of a standard by which browsers render HTML elements
        The box model consists of 4 parts-margins,borders,padding,and the actual content */
        .box-model {
            border: 1px solid red;
            height: 50px;
            width: 300px;
            padding: 20px;
            margin: 20px;
        }





        /* Cascade: When two rules apply that have equal specificity, the one that comes last in the css is the one that will be used */
        h2 {
            color: darkgreen;
        }

        h2 {
            color: blue;
        }

        .sub-heading { /* class selecter is more specific then a element selector */
            color: blue;
        }

        h3 {
            color: red !important;
        }

        #title {
            color: orange; /* Id selector is more specific then other selector and inline is top extreme more specific*/
        }


        /* Inheritance: Some CSS property values set on parent elements are inherited by their child element, and some aren't */
        .inheritance {
            color: orange;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 30px;
        }

        th, td {
            border-bottom: 1px solid #ccc;
            padding: 15px;
        }
        
        table {
            border-collapse: collapse;
            width: 60%;
        }

        td {
            text-align: center;
            height: 50px;
            vertical-align: bottom;
        }

        .content-1 {
            border: 1px solid red;
            display: inline; /* display: The display property specifies the display behavior(the type of rendering box) of an element.*/
        }

        .content-2 {
            border: 1px solid blue;
            display: none; /* display "none" is a value typically use with JS to show or hide elements */
        }


        /* Position: The position property specifies the type of positioning method used for an element(static, relative, absolute or sticky)
        -absolute: Absolute units are generally considered to always be the same size.

        -Relative units on the other hand are relative to something else, perhaps the size of the parent element's font, or the size of the viewport*/
        .position-1 {
            border: 1px solid red;
            position: sticky;
            top: 50px;
            left: 50px;
        }

        .position-2 {
            border: 1px solid blue;
            position: absolute;
            bottom: 0px;
            right: 0px;
        }
        .container {
            position: relative;
            width: 200px;
            height: 2000px;
            border: 1px solid black;
        }

        /* CSS Units: Relative units on the other hand are relative to something else, perhaps the size of the parent element's font, or the size of the viewport */
        .em-container {
            font-size: 20px;
            height: 2em; /* em means relative to the font-size of the element (2em means 2 times the size of the current font) */
        }

        .em {
            font-size: 1.5em;
        }

        .rem {
            font-size: 3rem; /*rem: relative to font-size of the root element */
            height: min(50vh, 600px); /*vh: relative to 1% of the height of the viewport*/
            border: 1px solid #333;
           /* width: 50vw; vw: relative to 1% of the width of the viewport*/
        }
